{
    "name": "localgovdrupal/localgov-project",
    "description": "Project template for the LocalGov Drupal distribution.",
    "type": "project",
    "license": "GPL-2.0-or-later",
    "homepage": "https://github.com/localgovdrupal/localgov_project",
    "repositories": [
        {
            "type": "composer",
            "url": "https://packages.drupal.org/8"
        },
        {
            "type": "github",
            "url":  "https://github.com/essexcountycouncil/content_ownership"
        },
        {
            "type": "github",
            "url":  "https://github.com/MatthewWilkes/openid_connect_azure_b2c"
        },
        {
            "type": "package",
            "package": {
                "name": "ckeditor/div",
                "version": "4.10.1",
                "type": "drupal-library",
                "extra": {
                    "installer-name": "ckeditor/plugins/div"
                },
                "dist": {
                    "url": "https://download.ckeditor.com/div/releases/div_4.10.1.zip",
                    "type": "zip"
                }
            }
        }
    ],
    "require": {
        "ckeditor/div": "4.10.1",
        "composer/installers": "^1.10",
        "cweagans/composer-patches": "^1.6",
        "drupal/autosave_form": "^1.4",
        "drupal/block_classes": "^1.0",
        "drupal/ckeditor_div_manager": "^2.0",
        "drupal/cludo_search": "^1.0@beta",
        "drupal/config_ignore": "^2.4",
        "drupal/config_split": "^2.0@RC",
        "drupal/core-composer-scaffold": "^9.1",
        "drupal/core-project-message": "^9.1",
        "drupal/core-recommended": "^9.1",
        "drupal/eu_cookie_compliance": "^1.24",
        "drupal/eu_cookie_compliance_gtm": "^1.0@alpha",
        "drupal/google_tag": "^1.6",
        "drupal/health_check_url": "^3.1",
        "drupal/migmag": "^1.8",
        "drupal/migrate_plus": "^6.0",
        "drupal/migrate_process_markdown_to_html": "^1",
        "drupal/monolog": "^2.2",
        "drupal/permissions_filter": "^1.3",
        "drupal/single_content_sync": "^1.3",
        "drupal/stage_file_proxy": "^2.0",
        "drupal/structure_sync": "^2.0",
        "drupal/ultimate_cron": "^2.0@alpha",
        "essexcountycouncil/content_ownership": "dev-main",
        "localgovdrupal/localgov": "^2.0",
        "localgovdrupal/localgov_eu_cookie_compliance": "1.x-dev",
        "localgovdrupal/localgov_forms": "1.x-dev",
        "matthewwilkes/openid_connect_azure_b2c": "dev-main",
        "wa72/htmlpagedom": "*"
    },
    "require-dev": {
        "brainmaestro/composer-git-hooks": "^2.8",
        "brianium/paratest": "^6.0",
        "drupal/coder": "^8.3",
        "drupal/config_inspector": "^1.3",
        "drupal/core-dev": "^9.1",
        "drupal/webprofiler": "^9.0",
        "mglaman/drupal-check": "^1.4",
        "mglaman/phpstan-drupal": "^1.0",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpspec/prophecy-phpunit": "^2",
        "phpstan/phpstan": "^1.0",
        "phpstan/phpstan-deprecation-rules": "^1.0",
        "roave/security-advisories": "dev-latest",
        "squizlabs/php_codesniffer": "^3.6"
    },
    "conflict": {
        "drupal/drupal": "*"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "sort-packages": true,
        "bin-dir": "bin/",
        "allow-plugins": {
            "composer/installers": true,
            "cweagans/composer-patches": true,
            "drupal/core-composer-scaffold": true,
            "drupal/core-project-message": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "php-http/discovery": false
        }
    },
    "autoload": {
        "classmap": [
            "scripts/composer/ScriptHandler.php"
        ]
    },
    "extra": {
        "enable-patching": true,
        "patches": {
            "drupal/core": {
                "Allow an install hook in profiles installing from configuration. See https://www.drupal.org/project/drupal/issues/2982052": "https://www.drupal.org/files/issues/2022-05-19/2982052-80.patch",
                "Allow chmod to fail in the public namespace if the resultant mode is 777": "patches/filesystem-chmod-0001.patch"
            },
            "drupal/migmag": {
                "Fix migmag_lookup exception when stubbing non-sql sources. See https://www.drupal.org/project/migmag/issues/3321292#comment-14785506": "https://www.drupal.org/files/issues/2022-11-14/migmag-remove_double_prepareRow-3321292_3.patch"
            },
            "drupal/cludo_search": {
                "Remove search type to use custom template": "patches/cludo_search-0001.patch",
                "Changes to text on the search page.": "patches/cludo_search-0002.patch"
            },
            "drupal/autosave_form": {
                "Disable autosaving for layout builder pages": "https://www.drupal.org/files/issues/2022-03-22/3270955-2-layout_builder.patch"
            },
            "drupal/health_check_url": {
                "Fix PHP8.1 deprecation warning": "https://www.drupal.org/files/issues/2022-12-27/3294736-php-8-compatibility-5.patch"
            },
            "localgovdrupal/localgov_eu_cookie_compliance": {
                "ECCW-606: Reverts h2 to h4.": "patches/ECCW-606_h2_to_h4.patch"
            }
        },
        "drupal-scaffold": {
            "locations": {
                "web-root": "web/"
            },
            "file-mapping": {
                "[web-root]/sites/default/settings.php": {
                    "mode": "replace",
                    "path": "assets/composer/settings.php",
                    "overwrite": true
                },
                "[web-root]/sites/development.services.yml": "assets/composer/development.services.yml"
            }
        },
        "installer-paths": {
            "web/core": ["type:drupal-core"],
            "web/libraries/{$name}": ["type:drupal-library"],
            "web/modules/contrib/{$name}": ["type:drupal-module"],
            "web/profiles/contrib/{$name}": ["type:drupal-profile"],
            "web/themes/contrib/{$name}": ["type:drupal-theme"],
            "drush/Commands/contrib/{$name}": ["type:drupal-drush"],
            "web/modules/custom/{$name}": ["type:drupal-custom-module"],
            "web/themes/custom/{$name}": ["type:drupal-custom-theme"]
        },
        "drupal-core-project-message": {
            "post-create-project-cmd-message": [
                "<bg=blue;fg=white>                                                                  </>",
                "<bg=blue;fg=white>  Congratulations, youâ€™ve installed the LocalGov Drupal codebase  </>",
                "<bg=blue;fg=white>                                                                  </>",
                "",
                "<bg=yellow;fg=black>Next steps</>:",

                "  * Install the site: https://www.drupal.org/docs/8/install",
                "  * Remove the plugin that prints this message:",
                "      composer remove drupal/core-project-message"
            ]
        },
        "hooks": {
            "config": {
                "stop-on-failure": [
                    "pre-push"
                ]
            },
            "commit-msg": [
                "# Get the commit message",
                "COMMIT_MESSAGE=$(cat \"$1\")",
                "# Define the regex pattern for the Jira ticket number and message format.",
                "PATTERN=\"^[A-Z]+-[0-9]+: .+$\"",
                "# Initialize a flag for errors",
                "ERROR=0",
                "# Check if the commit message length is within limits.",
                "if [ ${#COMMIT_MESSAGE} -gt 72 ]; then",
                "  echo \"Commit message is too long. It should not be more than 100 characters.\"",
                "  ERROR=1",
                "fi",
                "# Check if the commit message matches the pattern.",
                "if [[ ! ${COMMIT_MESSAGE} =~ ${PATTERN} ]]; then",
                "  echo \"Invalid commit message format. Please follow the format: JIRA-123: This is a proper sentence.\"",
                "  ERROR=1",
                "fi",
                "# If there's an error, exit with a non-zero status.",
                "if [ ${ERROR} -eq 1 ]; then",
                "  exit 1",
                "fi",
                "# If everything is fine, allow the commit to proceed.",
                "exit 0"
            ],
            "pre-commit": [
                "# A fork of a fork (https://gist.github.com/lolandese/84173dbcfbcde534e7cd84a2f4a0b7b2)",
                "# which has been tweaked to work with cghooks.",
                "# Work only with staged files to be processed by phpcs.",
                "FILES=\"$(git diff --staged --name-only HEAD --diff-filter=ACMRUXB)\"",
                "#Loop over those files with phpcs.",
                "echo \"Running PHP lint check\" >&2",
                "LINT_FAIL=0",
                "for filename in $FILES; do",
                "  if ! php -l $filename; then",
                "    LINT_FAIL=1",
                "  fi",
                "done;",
                "# There is no point in running PHP Code Sniffer on broken files.",
                "if [ $LINT_FAIL -gt 0 ]; then",
                "  echo \"Commit aborted. Fix your code. Then 'git add' and 'git commit' again.\"",
                "  exit 1",
                "fi",
                "echo \"Running PHP Code Sniffer Checks\" >&2",
                "echo $FILES | xargs bin/phpcs --standard=Drupal --extensions=php,module,inc,install,test,profile,theme,css,info,txt --ignore=node_modules,bower_components,vendor,*.md",
                "if [ $? -eq 0 ]; then",
                " # Exit executing the git commit.",
                " exit 0",
                "else",
                "  # Ask what to do, not executing the commit. Source: https://unix.stackexchange.com/a/121255/139407",
                "  read -p \"Fix the marked Sniff violations automatically [Y/n]?\" line </dev/tty",
                "  case \"$line\" in",
                "    y|Y) echo $FILES | xargs bin/phpcbf --standard=Drupal --extensions=php,module,inc,install,test,profile,theme,css,info,txt --ignore=node_modules,bower_components,vendor,*.md",
                "      ;;",
                "    *) echo \"No automatic corrections made.\"",
                "      ;;",
                "  esac",
                "  echo \"Commit aborted. Make remaining manual code fixes if necessary. Then 'git add' and 'git commit' again.\"",
                "  exit 1",
                "fi"
            ],
            "pre-push": [
                "echo pushing as $(git config user.name)"
            ]
        }
    },
    "scripts": {
        "pre-install-cmd": [
            "DrupalProject\\composer\\ScriptHandler::checkComposerVersion"
        ],
        "pre-update-cmd": [
            "DrupalProject\\composer\\ScriptHandler::checkComposerVersion"
        ],
        "post-install-cmd": [
            "@drupal-build",
            "@cghooks add"
        ],
        "post-update-cmd": "@drupal-build",
        "drupal-build": [
            "Composer\\Config::disableProcessTimeout",
            "@prepare-filesystem-for-update",
            "DrupalProject\\composer\\ScriptHandler::createRequiredFiles",
            "@secure-site",
            "@cghooks update"
        ],
        "update-drupal": [
            "Composer\\Config::disableProcessTimeout",
            "vendor/drush/drush/drush --yes -l default cache:rebuild",
            "vendor/drush/drush/drush --yes -l default config-import",
            "vendor/drush/drush/drush --yes -l default config-import",
            "vendor/drush/drush/drush --yes -l default cache:rebuild"
        ],
        "prepare-filesystem-for-update": [
            "chmod 777 --quiet web/sites/default/default.*.yml; true"
        ],
        "secure-site": [
            "chmod 444 web/sites/default/settings.php",
            "chmod 444 web/sites/default/default.*.yml",
            "chmod 444 web/sites/default/*.services.yml"
        ],
        "phpcs": "bin/phpcs --standard=Drupal,DrupalPractice --ignore=*/node_modules/* web/modules/custom web/themes/custom",
        "checker-php-lint": "bin/parallel-lint web/modules/custom",
        "phpunit-unit": "bin/phpunit -v --debug -c phpunit-unit.xml",
        "checker-security": [
            "bin/drush pm:security",
            "bin/drush pm:security-php"
        ],
        "checker-drupal": "bin/drupal-check -ad web/modules/custom web/themes/custom",
        "phpunit-modules": "sudo -u www-data -E vendor/bin/phpunit -v --debug modules",
        "cghooks": "bin/cghooks",
        "phpcbf": "bin/phpcbf --standard=Drupal,DrupalPractice web/modules/custom",
        "tests-required": [
            "composer validate",
            "composer checker-security",
            "composer checker-php-lint"
        ]
    }
}
