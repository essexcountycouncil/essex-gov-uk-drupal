<?php

use Drupal\block\Entity\Block;
use Drupal\Core\Url;

/**
 * @file
 * Theme function for the Essex County Council theme theme.
 */

/**
 * Implements hook_preprocess_HOOK() for block templates.
 *
 * @param $variables
 *   Template variables
 * @param $hook
 *   Type of template.
 *
 * Load blocks from specific region, so we can render them within a template.
 */
function essex_preprocess_paragraph__localgov_banner_primary(&$variables) {
  // Load active theme
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  // Load region blocks
  $blocks = \Drupal::entityTypeManager()
    ->getStorage('block')
    ->loadByProperties(array('theme' => $theme, 'region' => 'hero_content'));

  try {
    // Capture the region's viewable blocks and their settings.
    $build = [];
    foreach ($blocks as $key => $block) {
      if ($block->access('view')) {
        $block = Block::load($key);
        $block_content = \Drupal::entityTypeManager()
          ->getViewBuilder('block')
          ->view($block);
        $build[$key] = $block_content;
      }
    }

    // Add the region's worth of viewable blocks to the available variables.
    $variables['banner_content'] = $build;
  } catch (Exception $e) {
    $variables['banner_content'] = NULL;
  }

  try {
    $variables['is_front'] = Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['is_front'] = FALSE;
  }
  // Ensure the cache varies correctly (new in Drupal 8.3).
  $variables['#cache']['contexts'][] = 'url.path.is_front';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function essex_theme_suggestions_form_element_label_alter(&$suggestions, array $variables) {

  switch ($variables['element']['#id']) {
    case (str_starts_with($variables['element']['#id'], 'edit-data-use-policy')):
      // The first case is to make the Data use policy checkbox function
      // properly. It's using `str_starts_with` because if the data use policy
      // field wasn't selected, the id will have an appended `--<hash>` to
      // prevent form hijacking.
      $suggestions[] = 'form_element_label__edit_data_use_policy';
      break;

    default:
      break;
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 */
function essex_preprocess_breadcrumb(&$variables) {
  $request = \Drupal::request();
  $route_match = \Drupal::routeMatch();

  $node = $route_match->getParameter('node');

  // ECCW-633: Remove duplicate breadcrumb on subsites pages.
  if (!$node || $node->bundle() !== 'localgov_subsites_page') {
    $page_title = \Drupal::service('title_resolver')
      ->getTitle($request, $route_match->getRouteObject());

    // Append new item (text only) to breadcrumb for the current page title.
    $variables['breadcrumb'][] = [
      'text' => $page_title
    ];
  }
  $variables['#cache']['contexts'][] = 'url';
}

/**
 * Implements hook_preprocess_HOOK().
 * @TODO: remove this function if
 * https://github.com/localgovdrupal/localgov_base/issues/518
 * is resolved.
 */
function essex_preprocess_block(&$variables) {
  // Check if user is logged in.
  $user = \Drupal::currentUser();
  $variables['logged_in'] = $user->isAuthenticated();
  if ($variables['logged_in']) {
    // Get block id.
    $block_id = $variables['elements']['#id'];
    $variables['#attached']['library'][] = 'essex/edit-tabs';
    if ($block_id === 'essex_localgov_tabs_scarfolk') {
      // Attach library.
      $variables['#attached']['library'][] = 'essex/edit-tabs';
    }
  }
}

/**
 * Implements template_preprocess_html().
 *
 */
function essex_preprocess_html(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name === 'view.localgov_events_listing.page_all_events') {
    $variables['attributes']['class'][] = 'events-listing-page';
  }
}

/**
 * Implements hook_views_pre_render().
 */
function essex_views_pre_render($view) {
  if ($view->id() === 'localgov_events_listing' && $view->current_display === 'page_all_events') {
    $view->element['#attached']['library'][] = 'essex/events-listing-page';
  }
}
